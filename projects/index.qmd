---
format: 
  dashboard:
    scrolling: false
    orientation: rows
---

```{r lib, warning=FALSE}
ld <- scales::label_dollar()

library(shelbyR)
library(dplyr)
library(stringr)
library(lubridate)
library(fontawesome)
# map libs
library(sf)
library(arrow)
library(leaflet)
library(htmltools)
```

{{< include ../_partials/dashboard-case-levels.qmd >}} 

```{r casesData}
# This year's cases
raw_cases <- get_rehab_data("FY23") |>
  select(street_number:total, contract_date, start_date, completed_date, funding, parcel) |> 
  mutate(
    project_status = str_replace(project_status, "pending termination - rebid", "pending bid"),
    project_status = str_replace(project_status, "pending (new write-up|re-write)", "pending write-up") |> str_to_title() %>%
      str_remove_all("(?<=On Hold).*") %>%
      factor(levels = case_levels),
    street_name = str_to_title(street_name) |> str_remove("^(East|West) | Way"),
    across(where(is.character), ~ str_squish(.x))
  ) |>
  filter(project_status != "Cancelled") |> 
  arrange(bid_date, desc(project_status)) %>% 
  left_join(case_icons)

# To-do: set real date to narrow to current PY
cancelled <- get_rehab_data("cancelled")

queue <- get_rehab_data("queue") |> 
  mutate(street_number = as.numeric(street_number)) |> 
  select(neighborly_id, street_number, street_name, everything()) %>% 
  anti_join(raw_cases, by = c("street_number", "street_name")) %>% 
  anti_join(cancelled)
```

```{r makeVars}
# value boxes & status table counts
c_active <- nrow(
  raw_cases %>% filter(project_status %in% case_active)
)

c_done <- nrow(
  raw_cases %>% filter(project_status == "Complete")
)

c_cancel <- nrow(cancelled)

c_queue <- nrow(queue) + nrow(
  raw_cases %>% filter(project_status == "Pending Write-Up")
)
```

```{r makeSf}
# Add shapefile (sf) data for map
sf_commish <- read_sf(paste0(Sys.getenv("MY_DATA_FOLDER"), "geom/shelby/commish/commish.shp"))
# parcels <- read_csv_arrow("../data/hsg/data-raw/adb/2023/PARDAT.txt",
#                           as_data_frame = FALSE) %>%
#   select(PARID, street_number = ADRNO, ADRDIR, street_name = ADRSTR) %>%
#   mutate(street_name = str_to_title(street_name),
#          street_number = as.double(street_number)) %>%
#   right_join(raw_cases, by = c("street_number", "street_name")) %>%
#   collect()

# narrow to active or done, create leaflet labels
parid_cases <- raw_cases %>% 
  filter(project_status %in% case_active_done) %>% 
  mutate(
    marker_label = factor(marker_label, levels = c(case_icons$marker_label)),
         label = paste0(
          "<b>Project:</b> ", street_name, 
          "<br><b>Status:</b> ", project_status
          ),
         label = case_when(
           project_status == "Write-Up Underway" ~ label,
           project_status %in% c("Pending Bid", "Out For Bid", "Rebid") ~ 
             paste0(label, "<br><b>Bid Date:</b> ", bid_date),
           project_status %in% 
             c("Contract Signing", "Contract Approval", "Start Date Pending") ~ 
             paste0(label, 
                    "<br><b>Contractor:</b> ", contractor, 
                    "<br><b>Bid Date:</b> ", bid_date, 
                    "<br><b>Bid Amount:</b> ", ld(bid)),
           project_status == "Construction Underway" ~ 
             paste0(label, 
                    "<br><b>Contractor:</b> ", contractor, 
                    "<br><b>Bid Date:</b> ", bid_date, 
                    "<br><b>Bid Amount:</b> ", ld(bid), 
                    "<br><b>Start Date:</b> ", start_date),
           project_status == "Complete" ~ 
             paste0(label, 
                    "<br><b>Contractor:</b> ", contractor, 
                    "<br><b>Bid Date:</b> ", bid_date, 
                    "<br><b>Start Date:</b> ", start_date, 
                    "<br><b>Completed Date:</b> ", completed_date,
                    "<br><b>Bid Amount:</b> ", ld(bid), 
                    "<br><b>Change Orders:</b> ", ld(change_order),
                    "<br><b>Total Amount:</b> ", ld(total),
                    "<br><b>Funding:</b> ", funding
                    ),
           .default = label
         )
         )

# turn it into a sf
sf_cases <- read_sf(paste0(Sys.getenv("MY_DATA_FOLDER"), "geom/shelby/parcel/parcel.shp")) |> 
  mutate(parcel_id = str_squish(parcel_id)) |> 
  right_join(parid_cases, by = c("parcel_id" = "parcel")) |> 
  st_centroid()
```

## Row

::: {.valuebox icon="hourglass" color="blue"}
Queue

`{r} c_queue`
:::

::: {.valuebox icon="tools" color="yellow"}
Active projects

`{r} c_active`
:::

::: {.valuebox icon="house-check" color="green"}
Completed projects

`{r} c_done`
:::

## Row

### Column

#### Row {height=55%}

```{r tblDistricts}
#| title: County Districts
cases_district <- sf_cases %>% 
  st_join(sf_commish) %>% 
  st_drop_geometry() %>% 
  group_by(district) %>% 
  count() %>% 
  ungroup()

cases_district %>% 
  knitr::kable(
    col.names = c("District", "#^[PY23 Projects]"),
    align = "lr"
  )
```

```{r tblContractors}
#| title: "Contractors"
raw_cases %>% 
  filter(project_status %in% contractor_active) %>% 
  group_by(contractor) %>% 
  count() %>% 
  ungroup() %>% 
  knitr::kable(
    col.names = c("Contractor", "#^[Active Projects]")
  )
```

#### Row

```{r tblProjStatus}
#| title: Project Status Overview

# how many of each project status?
status_table <- raw_cases %>% 
  select(icon, project_status) %>% 
  summarise(
    value = n(), .by = project_status
  ) %>% 
  add_row(project_status = c("Queue", "Cancelled"),
          value = c(nrow(queue), c_cancel)) %>% 
  mutate(project_status = factor(project_status, levels = case_levels)) %>% 
  arrange(project_status) %>% 
  left_join(case_icons) %>% 
  mutate(grp = cur_group_id(), .by = icon) %>% 
  group_by(grp, icon) %>% 
  summarise(name = str_flatten(project_status, collapse = "/"),
            value = sum(value)) %>% 
  ungroup() %>% 
  select(-grp)

status_table %>% 
  knitr::kable(
    align = "llr",
    col.names = c("", "Status", "#"),
    format = "simple"
  )
```

### Column {width=65%}

#### Row {height=55%}

```{r leaflet}
awe_icons <- function(x) {
  p <- str_replace_all(x, "_", " ")
  t <- case_icons %>%
    mutate(project_status = str_replace(project_status, "-", " ")) %>% 
    filter(project_status == p)
  
  x = makeAwesomeIcon(
    text = fa(t$icon_raw),
    library = "fa",
    markerColor = t$marker_color
  )
}

awe_names <- case_active_done %>% str_replace_all(" |-", "_")

awe_list <- sapply(awe_names, awe_icons, simplify = FALSE)

class(awe_list) <- "leaflet_awesome_icon_set"

leaflet(sf_cases) %>% 
  addTiles() %>% 
  addAwesomeMarkers(
    icon = ~ awe_list[marker_label],
    label = lapply(sf_cases$label, HTML),
    group = ~ project_status
  ) %>% 
  addLayersControl(
    overlayGroups = case_active_done
  )
```

#### Row

```{r tblActiveProj}
#| title: Current Active Projects
raw_cases %>% 
  filter(project_status %in% case_active) %>% 
  select(street_name, contractor, project_status, bid_date, bid) %>% 
  mutate(
    project_status = factor(project_status, levels = c(case_active)),
    bid = ld(bid)
    ) %>% 
  arrange(desc(project_status)) |> 
  knitr::kable(
    col.names = c("Project", "Contractor", "Status", "Bid Date", "Amount")
      )
```
