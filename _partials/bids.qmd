
```{r}
# install.packages("shelby-housing/shelbyR")
library(shelbyR)
library(dplyr)
library(stringr)
library(lubridate)
library(gt)
library(reactable)

raw_cases <- get_rehab_data("rehab cases")
neighborly_cases <- get_rehab_data("neighborly rehab")
# neighborly_lead <- get_rehab_data("neighborly lead")
contractor_names <- get_rehab_data("contractor names")
```

::: {.panel-tabset}
## Active

```{r eval=TRUE}
open_house_dates <- readr::read_csv("./data/open-house-dates.csv") |> 
  mutate(open_house_date = mdy(open_house_date),
    open_house_start_time = mdy_hm(open_house_start_time),
         open_house_end_time = mdy_hm(open_house_end_time)
         )

out_to_bid <- raw_cases |>
  filter(project_status == "out for bid") |>
  left_join(open_house_dates, by = c("street_name" = "address")) |> 
  select(street_name, open_house_date, open_house_start_time, open_house_end_time, bid_date)
  
```

There are currently `r nrow(out_to_bid)` rehab projects out to bid:

```{r eval=TRUE}
out_to_bid |>
  arrange(open_house_start_time) |> 
  gt() |>
  tab_header(
    title = md("**Projects Currently Out to Bid**")
  ) |>
  cols_label(
    street_name = "Project",
    bid_date = "Bid End Date",
    open_house_date = "Date",
    open_house_start_time = "Start Time",
    open_house_end_time = "End Time"
  ) |>
  tab_spanner(
    label = "Open House",
    columns = c(open_house_date, open_house_start_time, open_house_end_time)
    ) |> 
  fmt_date(
    columns = bid_date,
    date_style = "yMMMd"
  ) |>
  fmt_date(
    columns = open_house_date,
    date_style = "MMMd"
  ) |>
  fmt_time(
    columns = c(open_house_start_time, open_house_end_time),
    time_style = "h_m_p"
  ) |>
  tab_options(table.width = "100%")
```


```{r eval=FALSE}
## Upcoming
upcoming <- raw_cases |>
  filter(bid_open > today()) |>
  slice_min(bid_open)

# The next bid pack will be released Friday, January 26, 2024 at 9:30 AM.
# It will close on Friday, February 9, 2024 at 9:30 AM.
# The next bid pack will be released `r format(unique(upcoming$bid_open), format = "%A, %B %d, %Y")` at 9:30 AM.
# It will close on `r format(unique(upcoming$bid_date), format = "%A, %B %d")` at 9:30 AM.
```

## Most Recent

```{r}
most_recent <- raw_cases |> 
  filter(bid_date <= lubridate::today()) |> 
  slice_max(bid_date) |> 
  select(bid_date, street_name, contractor, bid)

most_recent_date <- unique(most_recent$bid_date)

most_recent_all_bids <- read_bids(as.character(most_recent_date))
most_recent_all_bids <- most_recent_all_bids |> 
  summarise(bid = sum(bid_amount, na.rm = TRUE),
            .by = c(case_id, contractor_id)) |> 
  arrange(case_id, bid) |> 
  left_join(neighborly_cases |> select(case_id, street_name)) |> 
  left_join(contractor_names, by = c("contractor_id" = "id")) |> 
  select(street_name, contractor = nickname, bid)

most_recent$bid_date <- format(most_recent$bid_date, format = "%b %d, %Y")
ld <- scales::label_currency()
```

The most recent bid date was on **`r unique(most_recent$bid_date)`** for **`r nrow(most_recent)`** home rehab projects totaling **`r ld(sum(most_recent$bid))`**.

```{r}
reactable(
  most_recent,
  striped = TRUE,
  columns = list(
    street_name = colDef(name = "Project"),
    bid_date = colDef(name = "Bid Date"),
    contractor = colDef(name = "Contractor"),
    bid = colDef(
      name = "Bid Amount",
      format = colFormat(
        currency = "USD",
        digits = 0,
        separators = TRUE
      )
    )
  ),
  details = function(index) {
    bid_details <-
      most_recent_all_bids[most_recent_all_bids$street_name == most_recent$street_name[index],]
    htmltools::div(style = "float: right; width: 47%", 
                   reactable(bid_details, 
                             # compact = TRUE,
                             bordered = TRUE,
                             highlight = TRUE,
                             wrap = FALSE,
                             striped = TRUE,
                             # fullWidth = TRUE,
                             columns = list(
    street_name = colDef(show = FALSE),
    contractor = colDef(name = "Contractor"),
    bid = colDef(
      name = "Bid",
      format = colFormat(
        currency = "USD",
        digits = 0,
        separators = TRUE
      )
    )
  )))
  }
)
```


<small>
Note: No results are official until approved by our purchasing department.
</small>

## Older

```{r}
older_bids <- raw_cases |> 
  filter(bid_date < most_recent_date) |> 
  arrange(desc(bid_date)) |> 
  select(bid_date, street_name, contractor, bid) |> 
  arrange(desc(bid_date)) |> 
  slice_head(n = 10) |> 
  mutate(id = row_number())

older_bid_dates <- as.character(unique(older_bids$bid_date))
```

```{r, eval=FALSE}
all_bids <- readr::read_csv("./data/all-bids.csv") 
bids_to_get <- older_bids |> anti_join(all_bids, by = c("bid_date", "street_name")) |> filter(street_name != "Meadow Vale")
bids_to_get <- bids_to_get$bid_date

old_all_bids <- purrr::map(older_bid_dates, read_bids) |> purrr::list_rbind()


old_all_bids_2 <- old_all_bids |>
  distinct() |> 
  summarise(
    bid = sum(bid_amount, na.rm = TRUE),
            .by = c(case_id, bid_close_date, contractor_id)) |>
  arrange(case_id, bid) |>
  left_join(neighborly_cases |> select(case_id, street_name)) |>
  left_join(contractor_names, by = c("contractor_id" = "id")) |>
  filter(!is.na(street_name)) |> 
  mutate(bid_date = lubridate::mdy(bid_close_date)) |> 
  select(bid_date, street_name, contractor = nickname, bid)

# all_bids_new <- bind_rows(old_all_bids, all_bids)

readr::write_csv(old_all_bids_2, "./data/all-bids.csv")
```

```{r}
all_bids <- readr::read_csv("./data/all-bids.csv") |> distinct()
bid_details <- older_bids |> select(id, street_name, bid_date) |> distinct() |> 
  left_join(all_bids |> mutate(street_name = str_replace(street_name, "Meadowvale", "Meadow Vale")))
  
#  <- lubridate::pretty_dates()
bid_details$bid_date <- format(bid_details$bid_date, format = "%b %d, %Y")
older_bids$bid_date <- format(older_bids$bid_date, format = "%b %d, %Y")

reactable(
  older_bids,
  striped = TRUE,
  columns = list(
    street_name = colDef(name = "Project"),
    bid_date = colDef(name = "Bid Date"),
    contractor = colDef(name = "Contractor"),
    id = colDef(show = FALSE),
    bid = colDef(
      name = "Bid Amount",
      format = colFormat(
        digits = 0,
        currency = "USD",
        separators = TRUE
      )
    )
  ),
  details = function(index) {
    bid_details <-
      bid_details[bid_details$street_name == older_bids$street_name[index], ]
    bid_details <- bid_details |> select(-c(id, bid_date))
    htmltools::div(
      style = "float: right; width: 47%",
      reactable(
        bid_details,
        # compact = TRUE,
        bordered = TRUE,
        highlight = TRUE,
        wrap = FALSE,
        striped = TRUE,
        # fullWidth = TRUE,
        columns = list(
          street_name = colDef(show = FALSE),
          contractor = colDef(name = "Contractor"),
          bid = colDef(
            name = "Bid",
            format = colFormat(
              currency = "USD",
              digits = 0,
              separators = TRUE
            )
          )
        )
      )
    )
  }
)
```

:::
