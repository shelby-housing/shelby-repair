---
format: dashboard
---

## {.sidebar}

**Low-Mod Income Areas**

Certain HUD funding requires projects to serve Low-Moderate Income (LMI) Census Tracts. 

**Low-Income** (<50% AMI)
<br>**Moderate-Income** (50-80% AMI)
<br>*Medium Income* (80-120% AMI)

Areas in Shelby County at or above **35.57% LMI** qualify for HUD funding.

---

Use the buttons in the top right to change the map layers.

---

**Data Sources**

[Low to Moderate Income Population by Tract](https://hudgis-hud.opendata.arcgis.com/datasets/HUD::low-to-moderate-income-population-by-tract/about) 
<br>(updated 7/31/2023)

[Low to Moderate Income Population by Block Group](https://hudgis-hud.opendata.arcgis.com/datasets/HUD::low-to-moderate-income-population-by-block-group/about)
<br>(updated 7/31/2023)

[FY 2023 Exception Grantees](https://www.hudexchange.info/programs/acs-low-mod-summary-data/acs-low-mod-summary-data-exception-grantees/)

Census/Tigris Tracts (2010), Block Groups (2010), and Places (2021)

```{r}
library(readr)
library(dplyr)
library(sf)
library(leaflet)
library(htmltools)

lp <- scales::label_percent()
```

```{r}
fp_bg10 <- paste0(Sys.getenv("TIGRIS_CACHE_DIR"), "tl_2010_47_bg10.shp")
fp_tract10 <- paste0(Sys.getenv("TIGRIS_CACHE_DIR"), "tl_2010_47_tract10.shp")
fp_places <- paste0(Sys.getenv("TIGRIS_CACHE_DIR"), "tl_2021_47_place.shp")

bg10 <- read_sf(fp_bg10) |> 
  filter(COUNTYFP10 == "157") |> select(GEOID10)

tract10 <- read_sf(fp_tract10) |> 
  filter(COUNTYFP10 == "157") |> select(GEOID10)

places <- read_sf(fp_places) |> 
  st_filter(tract10, .predicate = st_overlaps) |> 
  filter(!(NAME %in% c("Atoka", "Piperton"))) |> select(NAME)

```

```{r}
raw_tract <- read_csv("data/LMI-tracts-shelby-FY23.csv") |> 
  select(GEOID, starts_with("LOWMOD")) |> 
  mutate(GEOID = as.character(GEOID),
         LOWMODPCT = LOWMODPCT / 100,
         label = paste0("<b>GEOID:</b> ", substr(GEOID, 1, 2), "-", substr(GEOID, 3, 5), "-", substr(GEOID, 6, 11),
                        "<br><b>Low-Mod:</b> ", LOWMOD,
                        "<br><b>Low-Mod Universe:</b> ", LOWMODUNIV,
                        "<br><b>% LMI:</b> ", lp(LOWMODPCT)
                        ))

LMISD_tract <- tract10 |> 
  right_join(raw_tract, by = c("GEOID10" = "GEOID")) |> 
  mutate(color = if_else(LOWMODPCT >= .3557, "Eligible", "Not Eligible"),
         label = paste0("<b>", color, "</b><br>", label))

# only_eligible_tracts <- LMISD_tract |> 
#   filter(LOWMODPCT >= .3557)
# 
# pal <- colorNumeric(palette = "plasma", domain = LMISD_tract$LOWMODPCT)
```

```{r}
raw_bg <- read_csv("data/LMI-bg-shelby-FY23.csv") |> 
  mutate(GEOID10 = as.character(GEOID10),
         label = paste0("<b>GEOID:</b> ", substr(GEOID10, 1, 2), "-", substr(GEOID10, 3, 5), "-", substr(GEOID10, 6, 11), "-", substr(GEOID10, 12, 12),
                        "<br><b>Low:</b> ", low,
                        "<br><b>Low-Mod:</b> ", lowmod,
                        "<br><b>Low-Middle:</b> ", lmmi,
                        "<br><b>Low-Mod Universe:</b> ", lowmoduniv,
                        "<br><b>% LMI:</b> ", lp(lowmod_pct)
                        ))

LMISD_bg <- bg10 |> 
  right_join(raw_bg, by = "GEOID10")  |> 
  mutate(color = if_else(lowmod_pct >= .3557, "Eligible", "Not Eligible"),
         label = paste0("<b>", color, "</b><br>", label))

# only_eligible_bg <- LMISD_bg |> 
#   filter(lowmod_pct >= .3557)
# 
# pal_bg <- colorNumeric(palette = "plasma", domain = LMISD_bg$lowmod_pct)
pal <- colorFactor(palette = c("#2ecc71", "#004b79"), levels = c("Eligible", "Not Eligible"))
```


## Row

```{r}
leaflet() |> 
  addTiles() |> 
  addMapPane("base", 450) |> 
  addMapPane("place", 440) |> 
  addPolygons(
    data = places[places$NAME == "Arlington", ],
    group = "Arlington",
    color = "red",
    fillOpacity = 0.6,
    weight = 3.5,
    label = "Arlington",
    highlightOptions = highlightOptions(fillOpacity = 0.5, sendToBack = TRUE),
    options = pathOptions(pane = "place")
  ) |> 
   addPolygons(
    data = places[places$NAME == "Germantown", ],
    group = "Germantown",
    color = "red",
    fillOpacity = 0.6,
    weight = 3.5,
    label = "Germantown",
    highlightOptions = highlightOptions(fillOpacity = 0.5, sendToBack = TRUE),
    options = pathOptions(pane = "place")
  ) |> 
   addPolygons(
    data = places[places$NAME == "Lakeland", ],
    group = "Lakeland",
    color = "red",
    fillOpacity = 0.6,
    weight = 3.5,
    label = "Lakeland",
    highlightOptions = highlightOptions(fillOpacity = 0.5, sendToBack = TRUE),
    options = pathOptions(pane = "place")
  ) |> 
   addPolygons(
    data = places[places$NAME == "Bartlett", ],
    group = "Bartlett",
    color = "red",
    fillOpacity = 0.6,
    weight = 3.5,
    label = "Bartlett",
    highlightOptions = highlightOptions(fillOpacity = 0.5, sendToBack = TRUE),
    options = pathOptions(pane = "place")
  ) |> 
   addPolygons(
    data = places[places$NAME == "Collierville", ],
    group = "Collierville",
    color = "red",
    fillOpacity = 0.6,
    weight = 3.5,
    label = "Collierville",
    highlightOptions = highlightOptions(fillOpacity = 0.5, sendToBack = TRUE),
    options = pathOptions(pane = "place")
  ) |> 
   addPolygons(
    data = places[places$NAME == "Memphis", ],
    group = "Memphis",
    color = "red",
    fillOpacity = 0.6,
    weight = 3.5,
    label = "Memphis",
    highlightOptions = highlightOptions(fillOpacity = 0.5, sendToBack = TRUE),
    options = pathOptions(pane = "place")
  ) |> 
  addPolygons(
    data = places[places$NAME == "Millington", ],
    group = "Millington",
    color = "red",
    fillOpacity = 0.6,
    weight = 3.5,
    label = "Millington",
    highlightOptions = highlightOptions(fillOpacity = 0.5, sendToBack = TRUE),
    options = pathOptions(pane = "place")
  ) |> 
  addPolygons(
    data = LMISD_tract,
    group = "Tracts",
    color = ~pal(LMISD_tract$color),
    fillOpacity = .5,
    weight = 1,
    label = lapply(LMISD_tract$label, HTML),
    highlightOptions = highlightOptions(fillOpacity = .8),
    options = pathOptions(pane = "base")
  ) |> 
  addPolygons(
    data = LMISD_bg,
    group = "Block Groups",
    color = ~pal(LMISD_bg$color),
    fillOpacity = .5,
    weight = 1,
    label = lapply(LMISD_bg$label, HTML),
    highlightOptions = highlightOptions(fillOpacity = .8),
    options = pathOptions(pane = "base")
  ) |> 
  addLayersControl(
    baseGroups = c(
      "Block Groups", 
      "Tracts"
      ),
    overlayGroups = c(
      "Arlington",
      "Bartlett",
      "Collierville",
      "Germantown",
      "Lakeland",
      "Memphis",
      "Millington"
    ),
    options = layersControlOptions(collapsed = FALSE, autoZIndex = FALSE)
  ) |> 
  hideGroup(c(
      "Arlington",
      "Bartlett",
      "Collierville",
      "Germantown",
      "Lakeland",
      "Memphis",
      "Millington"
    )) |> 
  addLegend(position = "bottomright", pal = pal, 
            values = c("Eligible", "Not Eligible"),
            title = "LMI Eligibility")
```

